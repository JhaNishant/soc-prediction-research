# Things for analysis

With 'soc_percent' as your target variable, you can perform various analyses to understand the relationship between 'soc_percent' and other features in your dataset. Here are some possible analyses:

Done! Correlation analysis: You can calculate the correlation coefficient between 'soc_percent' and other features to understand the strength and direction of the linear relationship between them. A high positive correlation indicates that as the value of one feature increases, the value of 'soc_percent' also increases, while a high negative correlation indicates that as the value of one feature increases, the value of 'soc_percent' decreases.

Done! Regression analysis: You can perform regression analysis to build a model that predicts 'soc_percent' using other features in the dataset. You can use various regression techniques like linear regression, polynomial regression, or any other regression method that suits your data.

Done! Permutation Feature importance analysis: You can analyze the importance of each feature in predicting 'soc_percent'. You can use techniques like feature importance ranking or decision tree-based methods like random forest or gradient boosting.

# Time for ML

1. DONE! Lasso Regression
    Develop a script named lasso_regression.py.
    Implement the Lasso class from the Scikit-learn library.
    Leverage the CuPy library for GPU-accelerated computations.

2. Support Vector Machines (SVM)

    Develop a script named svm_regression.py.
    Implement the SVR class from the Scikit-learn library.
    Integrate the ThunderSVM library for GPU-accelerated SVM training.

3. Polynomial Regression

    Develop a script named polynomial_regression.py.
    Implement the PolynomialFeatures class from the Scikit-learn library.
    Utilize the CuPy library for GPU-accelerated polynomial computations.